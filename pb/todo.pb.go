// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/todo.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TodoMessage struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Done                 bool     `protobuf:"varint,2,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TodoMessage) Reset()         { *m = TodoMessage{} }
func (m *TodoMessage) String() string { return proto.CompactTextString(m) }
func (*TodoMessage) ProtoMessage()    {}
func (*TodoMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{0}
}

func (m *TodoMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoMessage.Unmarshal(m, b)
}
func (m *TodoMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoMessage.Marshal(b, m, deterministic)
}
func (m *TodoMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoMessage.Merge(m, src)
}
func (m *TodoMessage) XXX_Size() int {
	return xxx_messageInfo_TodoMessage.Size(m)
}
func (m *TodoMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoMessage.DiscardUnknown(m)
}

var xxx_messageInfo_TodoMessage proto.InternalMessageInfo

func (m *TodoMessage) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *TodoMessage) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type TodoRequest struct {
	Task                 *TodoMessage `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TodoRequest) Reset()         { *m = TodoRequest{} }
func (m *TodoRequest) String() string { return proto.CompactTextString(m) }
func (*TodoRequest) ProtoMessage()    {}
func (*TodoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{1}
}

func (m *TodoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoRequest.Unmarshal(m, b)
}
func (m *TodoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoRequest.Marshal(b, m, deterministic)
}
func (m *TodoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoRequest.Merge(m, src)
}
func (m *TodoRequest) XXX_Size() int {
	return xxx_messageInfo_TodoRequest.Size(m)
}
func (m *TodoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TodoRequest proto.InternalMessageInfo

func (m *TodoRequest) GetTask() *TodoMessage {
	if m != nil {
		return m.Task
	}
	return nil
}

type TodoResponse struct {
	Tasks                []*TodoMessage `protobuf:"bytes,1,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TodoResponse) Reset()         { *m = TodoResponse{} }
func (m *TodoResponse) String() string { return proto.CompactTextString(m) }
func (*TodoResponse) ProtoMessage()    {}
func (*TodoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{2}
}

func (m *TodoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TodoResponse.Unmarshal(m, b)
}
func (m *TodoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TodoResponse.Marshal(b, m, deterministic)
}
func (m *TodoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TodoResponse.Merge(m, src)
}
func (m *TodoResponse) XXX_Size() int {
	return xxx_messageInfo_TodoResponse.Size(m)
}
func (m *TodoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TodoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TodoResponse proto.InternalMessageInfo

func (m *TodoResponse) GetTasks() []*TodoMessage {
	if m != nil {
		return m.Tasks
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f52905b89a1b23f, []int{3}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

func init() {
	proto.RegisterType((*TodoMessage)(nil), "todo.TodoMessage")
	proto.RegisterType((*TodoRequest)(nil), "todo.TodoRequest")
	proto.RegisterType((*TodoResponse)(nil), "todo.TodoResponse")
	proto.RegisterType((*Empty)(nil), "todo.Empty")
}

func init() { proto.RegisterFile("pb/todo.proto", fileDescriptor_1f52905b89a1b23f) }

var fileDescriptor_1f52905b89a1b23f = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x31, 0x4b, 0x03, 0x41,
	0x10, 0x85, 0xd9, 0xb8, 0x67, 0xcc, 0x9c, 0x16, 0x0e, 0x16, 0x47, 0xaa, 0x63, 0x41, 0x4c, 0x21,
	0x09, 0x44, 0x21, 0xb5, 0x82, 0x9d, 0x36, 0x6b, 0x2a, 0xbb, 0x3b, 0x77, 0x90, 0x23, 0x31, 0xb3,
	0xde, 0x8c, 0x82, 0xff, 0x5e, 0x6e, 0xd7, 0xe2, 0x40, 0xbb, 0xd9, 0x7d, 0xf3, 0xbd, 0xf7, 0x18,
	0x38, 0x8b, 0xed, 0x4a, 0x39, 0xf0, 0x32, 0xf6, 0xac, 0x8c, 0x76, 0x98, 0xdd, 0x06, 0xca, 0x2d,
	0x07, 0x7e, 0x22, 0x91, 0xe6, 0x8d, 0xf0, 0x02, 0x0a, 0xed, 0x74, 0x4f, 0x95, 0xa9, 0xcd, 0x62,
	0xe6, 0xf3, 0x03, 0x11, 0x6c, 0xe0, 0x03, 0x55, 0x93, 0xda, 0x2c, 0x4e, 0x7c, 0x9a, 0xdd, 0x6d,
	0x06, 0x3d, 0x7d, 0x7c, 0x92, 0x28, 0x5e, 0x82, 0xd5, 0x46, 0x76, 0x89, 0x2b, 0xd7, 0xe7, 0xcb,
	0x14, 0x34, 0x72, 0xf6, 0x49, 0x76, 0x1b, 0x38, 0xcd, 0x94, 0x44, 0x3e, 0x08, 0xe1, 0x15, 0x14,
	0xdb, 0x46, 0x76, 0x52, 0x99, 0xfa, 0xe8, 0x7f, 0x2e, 0xeb, 0x6e, 0x0a, 0xc5, 0xc3, 0x7b, 0xd4,
	0xef, 0xf5, 0x3e, 0xe7, 0x3e, 0x53, 0xff, 0xd5, 0xbd, 0x12, 0xae, 0x60, 0x7a, 0x17, 0xc2, 0xb0,
	0x83, 0x23, 0xf8, 0xb7, 0xd5, 0xfc, 0xef, 0x17, 0x5e, 0xc3, 0xec, 0xb1, 0x13, 0x4d, 0xae, 0x58,
	0x66, 0x3d, 0x39, 0xcf, 0x71, 0xbc, 0x9c, 0xfb, 0xdd, 0xdb, 0x97, 0x49, 0x6c, 0xdb, 0xe3, 0x74,
	0xb1, 0x9b, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x91, 0x41, 0x53, 0x37, 0x42, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TodoServiceClient is the client API for TodoService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TodoServiceClient interface {
	AddTask(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoRequest, error)
	ListTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TodoResponse, error)
}

type todoServiceClient struct {
	cc *grpc.ClientConn
}

func NewTodoServiceClient(cc *grpc.ClientConn) TodoServiceClient {
	return &todoServiceClient{cc}
}

func (c *todoServiceClient) AddTask(ctx context.Context, in *TodoRequest, opts ...grpc.CallOption) (*TodoRequest, error) {
	out := new(TodoRequest)
	err := c.cc.Invoke(ctx, "/todo.TodoService/AddTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *todoServiceClient) ListTasks(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*TodoResponse, error) {
	out := new(TodoResponse)
	err := c.cc.Invoke(ctx, "/todo.TodoService/ListTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TodoServiceServer is the server API for TodoService service.
type TodoServiceServer interface {
	AddTask(context.Context, *TodoRequest) (*TodoRequest, error)
	ListTasks(context.Context, *Empty) (*TodoResponse, error)
}

// UnimplementedTodoServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTodoServiceServer struct {
}

func (*UnimplementedTodoServiceServer) AddTask(ctx context.Context, req *TodoRequest) (*TodoRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddTask not implemented")
}
func (*UnimplementedTodoServiceServer) ListTasks(ctx context.Context, req *Empty) (*TodoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTasks not implemented")
}

func RegisterTodoServiceServer(s *grpc.Server, srv TodoServiceServer) {
	s.RegisterService(&_TodoService_serviceDesc, srv)
}

func _TodoService_AddTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TodoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).AddTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/AddTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).AddTask(ctx, req.(*TodoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TodoService_ListTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TodoServiceServer).ListTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/todo.TodoService/ListTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TodoServiceServer).ListTasks(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _TodoService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "todo.TodoService",
	HandlerType: (*TodoServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddTask",
			Handler:    _TodoService_AddTask_Handler,
		},
		{
			MethodName: "ListTasks",
			Handler:    _TodoService_ListTasks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/todo.proto",
}
